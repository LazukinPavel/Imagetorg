function buttonUp(){var n=$(".search__input").val();0!==(n=$.trim(n).length)?$(".search__popup_invisible").css("display","none"):($(".search__input").val(""),$(".search__popup_invisible").css("display","block"))}$(document).ready(function(){var n=$(".search__popup_invisible"),s=$(".search__input"),e=!1;n.click(function(){e=0==e?(s.addClass("search__input_opened"),s.focus(),!0):(s.removeClass("search__input_opened"),s.focusout(),s.val(""),!1)}),n.mouseup(function(){return!1}),s.mouseup(function(){return!1}),$(document).mouseup(function(){1==e&&($(".search__popup_invisible").css("display","block"),n.click())})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiYnV0dG9uVXAiLCJpbnB1dFZhbCIsIiQiLCJ2YWwiLCJ0cmltIiwibGVuZ3RoIiwiY3NzIiwiZG9jdW1lbnQiLCJyZWFkeSIsInNlYXJjaFBvcFVwIiwiaW5wdXRCb3giLCJpc09wZW4iLCJjbGljayIsImFkZENsYXNzIiwiZm9jdXMiLCJyZW1vdmVDbGFzcyIsImZvY3Vzb3V0IiwibW91c2V1cCJdLCJtYXBwaW5ncyI6IkFBOEJHLFNBQVNBLFdBQ1IsSUFBSUMsRUFBV0MsRUFBRSxrQkFBa0JDLE1BRWxCLEtBRGpCRixFQUFXQyxFQUFFRSxLQUFLSCxHQUFVSSxRQUUzQkgsRUFBRSw0QkFBNEJJLElBQUksVUFBVSxTQUU1Q0osRUFBRSxrQkFBa0JDLElBQUksSUFDeEJELEVBQUUsNEJBQTRCSSxJQUFJLFVBQVUsVUFwQ2pESixFQUFFSyxVQUFVQyxNQUFNLFdBQ2YsSUFBSUMsRUFBY1AsRUFBRSw0QkFDaEJRLEVBQVdSLEVBQUUsa0JBQ2JTLEdBQVMsRUFDYkYsRUFBWUcsTUFBTSxXQUloQkQsRUFIWSxHQUFWQSxHQUNGRCxFQUFTRyxTQUFTLHdCQUNsQkgsRUFBU0ksU0FDQSxJQUVUSixFQUFTSyxZQUFZLHdCQUNyQkwsRUFBU00sV0FDUE4sRUFBU1AsSUFBSSxLQUNOLEtBR1ZNLEVBQVlRLFFBQVEsV0FDbkIsT0FBTyxJQUVUUCxFQUFTTyxRQUFRLFdBQ2YsT0FBTyxJQUVUZixFQUFFSyxVQUFVVSxRQUFRLFdBQ0wsR0FBVk4sSUFDRlQsRUFBRSw0QkFBNEJJLElBQUksVUFBVSxTQUM1Q0csRUFBWUciLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xyXG5cdFx0XHR2YXIgc2VhcmNoUG9wVXAgPSAkKCcuc2VhcmNoX19wb3B1cF9pbnZpc2libGUnKTtcclxuXHRcdFx0dmFyIGlucHV0Qm94ID0gJCgnLnNlYXJjaF9faW5wdXQnKTtcclxuXHRcdFx0dmFyIGlzT3BlbiA9IGZhbHNlO1xyXG5cdFx0XHRzZWFyY2hQb3BVcC5jbGljayhmdW5jdGlvbigpe1xyXG5cdFx0XHRcdGlmKGlzT3BlbiA9PSBmYWxzZSl7XHJcblx0XHRcdFx0XHRpbnB1dEJveC5hZGRDbGFzcygnc2VhcmNoX19pbnB1dF9vcGVuZWQnKTtcclxuXHRcdFx0XHRcdGlucHV0Qm94LmZvY3VzKCk7XHJcblx0XHRcdFx0XHRpc09wZW4gPSB0cnVlO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRpbnB1dEJveC5yZW1vdmVDbGFzcygnc2VhcmNoX19pbnB1dF9vcGVuZWQnKTtcclxuXHRcdFx0XHRcdGlucHV0Qm94LmZvY3Vzb3V0KCk7XHJcblx0XHRcdFx0ICBcdGlucHV0Qm94LnZhbCgnJyk7XHJcblx0XHRcdFx0XHRpc09wZW4gPSBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pOyAgXHJcblx0XHRcdCBzZWFyY2hQb3BVcC5tb3VzZXVwKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdGlucHV0Qm94Lm1vdXNldXAoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0JChkb2N1bWVudCkubW91c2V1cChmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0aWYoaXNPcGVuID09IHRydWUpe1xyXG5cdFx0XHRcdFx0XHQkKCcuc2VhcmNoX19wb3B1cF9pbnZpc2libGUnKS5jc3MoJ2Rpc3BsYXknLCdibG9jaycpO1xyXG5cdFx0XHRcdFx0XHRzZWFyY2hQb3BVcC5jbGljaygpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblx0XHRcdGZ1bmN0aW9uIGJ1dHRvblVwKCl7XHJcblx0XHRcdFx0dmFyIGlucHV0VmFsID0gJCgnLnNlYXJjaF9faW5wdXQnKS52YWwoKTtcclxuXHRcdFx0XHRpbnB1dFZhbCA9ICQudHJpbShpbnB1dFZhbCkubGVuZ3RoO1xyXG5cdFx0XHRcdGlmKCBpbnB1dFZhbCAhPT0gMCl7XHJcblx0XHRcdFx0XHQkKCcuc2VhcmNoX19wb3B1cF9pbnZpc2libGUnKS5jc3MoJ2Rpc3BsYXknLCdub25lJyk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdCQoJy5zZWFyY2hfX2lucHV0JykudmFsKCcnKTtcclxuXHRcdFx0XHRcdCQoJy5zZWFyY2hfX3BvcHVwX2ludmlzaWJsZScpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcbiJdfQ==

function buttonUp(){var t=$(".search__input").val();0!==(t=$.trim(t).length)?$(".search__popup_invisible").css("display","none"):($(".search__input").val(""),$(".search__popup_invisible").css("display","block"))}function buttonUp(){var t=$(".search__input").val();0!==(t=$.trim(t).length)?$(".search__popup_invisible").css("display","none"):($(".search__input").val(""),$(".search__popup_invisible").css("display","block"))}function buttonUp(){var t=$(".search__input").val();0!==(t=$.trim(t).length)?$(".search__popup_invisible").css("display","none"):($(".search__input").val(""),$(".search__popup_invisible").css("display","block"))}$(document).ready(function(){var t=$(".search__popup_invisible"),e=$(".search__input"),n=!1;t.click(function(){n=0==n?(e.addClass("search__input_opened"),e.focus(),!0):(e.removeClass("search__input_opened"),e.focusout(),e.val(""),!1)}),t.mouseup(function(){return!1}),e.mouseup(function(){return!1}),$(document).mouseup(function(){1==n&&($(".search__popup_invisible").css("display","block"),t.click())})}),$(document).ready(function(){var t=$(".search__popup_invisible"),e=$(".search__input"),n=!1;t.click(function(){n=0==n?(e.addClass("search__input_opened"),e.focus(),!0):(e.removeClass("search__input_opened"),e.focusout(),e.val(""),!1)}),t.mouseup(function(){return!1}),e.mouseup(function(){return!1}),$(document).mouseup(function(){1==n&&($(".search__popup_invisible").css("display","block"),t.click())})}),function(e){wp.customize("blogname",function(t){t.bind(function(t){e(".site-title a").text(t)})}),wp.customize("blogdescription",function(t){t.bind(function(t){e(".site-description").text(t)})}),wp.customize("header_textcolor",function(t){t.bind(function(t){"blank"===t?e(".site-title, .site-description").css({clip:"rect(1px, 1px, 1px, 1px)",position:"absolute"}):(e(".site-title, .site-description").css({clip:"auto",position:"relative"}),e(".site-title a, .site-description").css({color:t}))})})}(jQuery),$(document).ready(function(){var t=$(".search__popup_invisible"),e=$(".search__input"),n=!1;t.click(function(){n=0==n?(e.addClass("search__input_opened"),e.focus(),!0):(e.removeClass("search__input_opened"),e.focusout(),e.val(""),!1)}),t.mouseup(function(){return!1}),e.mouseup(function(){return!1}),$(document).mouseup(function(){1==n&&($(".search__popup_invisible").css("display","block"),t.click())})}),function(){var a,t,e,n,s,i;if((a=document.getElementById("site-navigation"))&&void 0!==(t=a.getElementsByTagName("button")[0]))if(void 0!==(e=a.getElementsByTagName("ul")[0])){for(e.setAttribute("aria-expanded","false"),-1===e.className.indexOf("nav-menu")&&(e.className+=" nav-menu"),t.onclick=function(){-1!==a.className.indexOf("toggled")?(a.className=a.className.replace(" toggled",""),t.setAttribute("aria-expanded","false"),e.setAttribute("aria-expanded","false")):(a.className+=" toggled",t.setAttribute("aria-expanded","true"),e.setAttribute("aria-expanded","true"))},s=0,i=(n=e.getElementsByTagName("a")).length;s<i;s++)n[s].addEventListener("focus",r,!0),n[s].addEventListener("blur",r,!0);!function(t){var e,n,s=a.querySelectorAll(".menu-item-has-children > a, .page_item_has_children > a");if("ontouchstart"in window)for(e=function(t){var e,n=this.parentNode;if(n.classList.contains("focus"))n.classList.remove("focus");else{for(t.preventDefault(),e=0;e<n.parentNode.children.length;++e)n!==n.parentNode.children[e]&&n.parentNode.children[e].classList.remove("focus");n.classList.add("focus")}},n=0;n<s.length;++n)s[n].addEventListener("touchstart",e,!1)}()}else t.style.display="none";function r(){for(var t=this;-1===t.className.indexOf("nav-menu");)"li"===t.tagName.toLowerCase()&&(-1!==t.className.indexOf("focus")?t.className=t.className.replace(" focus",""):t.className+=" focus"),t=t.parentElement}}(),/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())},!1);var slideNow=1,slideCount=jQuery("#slidewrapper").children().length,slideInterval=5e5,navBtnId=0,translateWidth=0;function nextSlide(){slideNow==slideCount||slideNow<=0||slideCount<slideNow?(jQuery("#slidewrapper").css("transform","translate(0, 0)"),slideNow=1):(translateWidth=-jQuery("#viewport").width()*slideNow,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow++)}function prevSlide(){1==slideNow||slideNow<=0||slideCount<slideNow?(translateWidth=-jQuery("#viewport").width()*(slideCount-1),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=slideCount):(translateWidth=-jQuery("#viewport").width()*(slideNow-2),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow--)}function nextSlide(){slideNow==slideCount||slideNow<=0||slideCount<slideNow?(jQuery("#slidewrapper").css("transform","translate(0, 0)"),slideNow=1):(translateWidth=-jQuery("#viewport").width()*slideNow,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow++)}function prevSlide(){1==slideNow||slideNow<=0||slideCount<slideNow?(translateWidth=-jQuery("#viewport").width()*(slideCount-1),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=slideCount):(translateWidth=-jQuery("#viewport").width()*(slideNow-2),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow--)}jQuery(document).ready(function(){var t=setInterval(nextSlide,slideInterval);jQuery("#viewport").hover(function(){clearInterval(t)},function(){t=setInterval(nextSlide,slideInterval)}),jQuery("#next-btn").click(function(){nextSlide()}),jQuery("#prev-btn").click(function(){prevSlide()}),jQuery(".slide-nav-btn").click(function(){(navBtnId=jQuery(this).index())+1!=slideNow&&(translateWidth=-jQuery("#viewport").width()*navBtnId,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=navBtnId+1)})}),slideNow=1,slideCount=jQuery("#slidewrapper").children().length,slideInterval=5e5,translateWidth=navBtnId=0,jQuery(document).ready(function(){var t=setInterval(nextSlide,slideInterval);jQuery("#viewport").hover(function(){clearInterval(t)},function(){t=setInterval(nextSlide,slideInterval)}),jQuery("#next-btn").click(function(){nextSlide()}),jQuery("#prev-btn").click(function(){prevSlide()}),jQuery(".slide-nav-btn").click(function(){(navBtnId=jQuery(this).index())+1!=slideNow&&(translateWidth=-jQuery("#viewport").width()*navBtnId,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=navBtnId+1)})});slideNow=1,slideCount=jQuery("#slidewrapper").children().length,slideInterval=5e5,navBtnId=0,translateWidth=0;function nextSlide(){slideNow==slideCount||slideNow<=0||slideCount<slideNow?(jQuery("#slidewrapper").css("transform","translate(0, 0)"),slideNow=1):(translateWidth=-jQuery("#viewport").width()*slideNow,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow++)}function prevSlide(){1==slideNow||slideNow<=0||slideCount<slideNow?(translateWidth=-jQuery("#viewport").width()*(slideCount-1),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=slideCount):(translateWidth=-jQuery("#viewport").width()*(slideNow-2),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow--)}jQuery(document).ready(function(){var t=setInterval(nextSlide,slideInterval);jQuery("#viewport").hover(function(){clearInterval(t)},function(){t=setInterval(nextSlide,slideInterval)}),jQuery("#next-btn").click(function(){nextSlide()}),jQuery("#prev-btn").click(function(){prevSlide()}),jQuery(".slide-nav-btn").click(function(){(navBtnId=jQuery(this).index())+1!=slideNow&&(translateWidth=-jQuery("#viewport").width()*navBtnId,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=navBtnId+1)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

var slideNow=1,slideCount=jQuery("#slidewrapper").children().length,slideInterval=5e5,navBtnId=0,translateWidth=0;function nextSlide(){slideNow==slideCount||slideNow<=0||slideCount<slideNow?(jQuery("#slidewrapper").css("transform","translate(0, 0)"),slideNow=1):(translateWidth=-jQuery("#viewport").width()*slideNow,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow++)}function prevSlide(){1==slideNow||slideNow<=0||slideCount<slideNow?(translateWidth=-jQuery("#viewport").width()*(slideCount-1),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=slideCount):(translateWidth=-jQuery("#viewport").width()*(slideNow-2),jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow--)}jQuery(document).ready(function(){var t=setInterval(nextSlide,slideInterval);jQuery("#viewport").hover(function(){clearInterval(t)},function(){t=setInterval(nextSlide,slideInterval)}),jQuery("#next-btn").click(function(){nextSlide()}),jQuery("#prev-btn").click(function(){prevSlide()}),jQuery(".slide-nav-btn").click(function(){(navBtnId=jQuery(this).index())+1!=slideNow&&(translateWidth=-jQuery("#viewport").width()*navBtnId,jQuery("#slidewrapper").css({transform:"translate("+translateWidth+"px, 0)","-webkit-transform":"translate("+translateWidth+"px, 0)","-ms-transform":"translate("+translateWidth+"px, 0)"}),slideNow=navBtnId+1)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5qcyJdLCJuYW1lcyI6WyJzbGlkZU5vdyIsInNsaWRlQ291bnQiLCJqUXVlcnkiLCJjaGlsZHJlbiIsImxlbmd0aCIsInNsaWRlSW50ZXJ2YWwiLCJuYXZCdG5JZCIsInRyYW5zbGF0ZVdpZHRoIiwibmV4dFNsaWRlIiwiY3NzIiwid2lkdGgiLCJ0cmFuc2Zvcm0iLCItd2Via2l0LXRyYW5zZm9ybSIsIi1tcy10cmFuc2Zvcm0iLCJwcmV2U2xpZGUiLCJkb2N1bWVudCIsInJlYWR5Iiwic3dpdGNoSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImhvdmVyIiwiY2xlYXJJbnRlcnZhbCIsImNsaWNrIiwidGhpcyIsImluZGV4Il0sIm1hcHBpbmdzIjoiQUFHQSxJQUFJQSxTQUFXLEVBQ1hDLFdBQWFDLE9BQU8saUJBQWlCQyxXQUFXQyxPQUNoREMsY0FBZ0IsSUFDaEJDLFNBQVcsRUFDWEMsZUFBaUIsRUFtQ3JCLFNBQVNDLFlBQ0RSLFVBQVlDLFlBQWNELFVBQVksR0FBZ0JDLFdBQVhELFVBQzNDRSxPQUFPLGlCQUFpQk8sSUFBSSxZQUFhLG1CQUN6Q1QsU0FBVyxJQUVYTyxnQkFBa0JMLE9BQU8sYUFBYVEsUUFBVSxTQUNoRFIsT0FBTyxpQkFBaUJPLElBQUksQ0FDeEJFLFVBQWEsYUFBZUosZUFBaUIsU0FDN0NLLG9CQUFxQixhQUFlTCxlQUFpQixTQUNyRE0sZ0JBQWlCLGFBQWVOLGVBQWlCLFdBRXJEUCxZQUlSLFNBQVNjLFlBQ1csR0FBWmQsVUFBaUJBLFVBQVksR0FBZ0JDLFdBQVhELFVBQ2xDTyxnQkFBa0JMLE9BQU8sYUFBYVEsU0FBV1QsV0FBYSxHQUM5REMsT0FBTyxpQkFBaUJPLElBQUksQ0FDeEJFLFVBQWEsYUFBZUosZUFBaUIsU0FDN0NLLG9CQUFxQixhQUFlTCxlQUFpQixTQUNyRE0sZ0JBQWlCLGFBQWVOLGVBQWlCLFdBRXJEUCxTQUFXQyxhQUVYTSxnQkFBa0JMLE9BQU8sYUFBYVEsU0FBV1YsU0FBVyxHQUM1REUsT0FBTyxpQkFBaUJPLElBQUksQ0FDeEJFLFVBQWEsYUFBZUosZUFBaUIsU0FDN0NLLG9CQUFxQixhQUFlTCxlQUFpQixTQUNyRE0sZ0JBQWlCLGFBQWVOLGVBQWlCLFdBRXJEUCxZQWhFUkUsT0FBT2EsVUFBVUMsTUFBTSxXQUNuQixJQUFJQyxFQUFpQkMsWUFBWVYsVUFBV0gsZUFFNUNILE9BQU8sYUFBYWlCLE1BQU0sV0FDdEJDLGNBQWNILElBQ2YsV0FDQ0EsRUFBaUJDLFlBQVlWLFVBQVdILGlCQUc1Q0gsT0FBTyxhQUFhbUIsTUFBTSxXQUN0QmIsY0FHSk4sT0FBTyxhQUFhbUIsTUFBTSxXQUN0QlAsY0FHSlosT0FBTyxrQkFBa0JtQixNQUFNLFlBQzNCZixTQUFXSixPQUFPb0IsTUFBTUMsU0FFVCxHQUFLdkIsV0FDaEJPLGdCQUFrQkwsT0FBTyxhQUFhUSxRQUFVLFNBQ2hEUixPQUFPLGlCQUFpQk8sSUFBSSxDQUN4QkUsVUFBYSxhQUFlSixlQUFpQixTQUM3Q0ssb0JBQXFCLGFBQWVMLGVBQWlCLFNBQ3JETSxnQkFBaUIsYUFBZU4sZUFBaUIsV0FFckRQLFNBQVdNLFNBQVciLCJmaWxlIjoic2xpZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5cclxudmFyIHNsaWRlTm93ID0gMTtcclxudmFyIHNsaWRlQ291bnQgPSBqUXVlcnkoJyNzbGlkZXdyYXBwZXInKS5jaGlsZHJlbigpLmxlbmd0aDtcclxudmFyIHNsaWRlSW50ZXJ2YWwgPSA1MDAwMDA7XHJcbnZhciBuYXZCdG5JZCA9IDA7XHJcbnZhciB0cmFuc2xhdGVXaWR0aCA9IDA7XHJcblxyXG5qUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIHN3aXRjaEludGVydmFsID0gc2V0SW50ZXJ2YWwobmV4dFNsaWRlLCBzbGlkZUludGVydmFsKTtcclxuXHJcbiAgICBqUXVlcnkoJyN2aWV3cG9ydCcpLmhvdmVyKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoc3dpdGNoSW50ZXJ2YWwpO1xyXG4gICAgfSwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgc3dpdGNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChuZXh0U2xpZGUsIHNsaWRlSW50ZXJ2YWwpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgalF1ZXJ5KCcjbmV4dC1idG4nKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICBuZXh0U2xpZGUoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGpRdWVyeSgnI3ByZXYtYnRuJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcHJldlNsaWRlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBqUXVlcnkoJy5zbGlkZS1uYXYtYnRuJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgbmF2QnRuSWQgPSBqUXVlcnkodGhpcykuaW5kZXgoKTtcclxuXHJcbiAgICAgICAgaWYgKG5hdkJ0bklkICsgMSAhPSBzbGlkZU5vdykge1xyXG4gICAgICAgICAgICB0cmFuc2xhdGVXaWR0aCA9IC1qUXVlcnkoJyN2aWV3cG9ydCcpLndpZHRoKCkgKiAobmF2QnRuSWQpO1xyXG4gICAgICAgICAgICBqUXVlcnkoJyNzbGlkZXdyYXBwZXInKS5jc3Moe1xyXG4gICAgICAgICAgICAgICAgJ3RyYW5zZm9ybSc6ICd0cmFuc2xhdGUoJyArIHRyYW5zbGF0ZVdpZHRoICsgJ3B4LCAwKScsXHJcbiAgICAgICAgICAgICAgICAnLXdlYmtpdC10cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICAgICAgJy1tcy10cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgc2xpZGVOb3cgPSBuYXZCdG5JZCArIDE7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbmZ1bmN0aW9uIG5leHRTbGlkZSgpIHtcclxuICAgIGlmIChzbGlkZU5vdyA9PSBzbGlkZUNvdW50IHx8IHNsaWRlTm93IDw9IDAgfHwgc2xpZGVOb3cgPiBzbGlkZUNvdW50KSB7XHJcbiAgICAgICAgalF1ZXJ5KCcjc2xpZGV3cmFwcGVyJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsIDApJyk7XHJcbiAgICAgICAgc2xpZGVOb3cgPSAxO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0cmFuc2xhdGVXaWR0aCA9IC1qUXVlcnkoJyN2aWV3cG9ydCcpLndpZHRoKCkgKiAoc2xpZGVOb3cpO1xyXG4gICAgICAgIGpRdWVyeSgnI3NsaWRld3JhcHBlcicpLmNzcyh7XHJcbiAgICAgICAgICAgICd0cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICAnLXdlYmtpdC10cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICAnLW1zLXRyYW5zZm9ybSc6ICd0cmFuc2xhdGUoJyArIHRyYW5zbGF0ZVdpZHRoICsgJ3B4LCAwKScsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc2xpZGVOb3crKztcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcHJldlNsaWRlKCkge1xyXG4gICAgaWYgKHNsaWRlTm93ID09IDEgfHwgc2xpZGVOb3cgPD0gMCB8fCBzbGlkZU5vdyA+IHNsaWRlQ291bnQpIHtcclxuICAgICAgICB0cmFuc2xhdGVXaWR0aCA9IC1qUXVlcnkoJyN2aWV3cG9ydCcpLndpZHRoKCkgKiAoc2xpZGVDb3VudCAtIDEpO1xyXG4gICAgICAgIGpRdWVyeSgnI3NsaWRld3JhcHBlcicpLmNzcyh7XHJcbiAgICAgICAgICAgICd0cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICAnLXdlYmtpdC10cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgICAgICAnLW1zLXRyYW5zZm9ybSc6ICd0cmFuc2xhdGUoJyArIHRyYW5zbGF0ZVdpZHRoICsgJ3B4LCAwKScsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc2xpZGVOb3cgPSBzbGlkZUNvdW50O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0cmFuc2xhdGVXaWR0aCA9IC1qUXVlcnkoJyN2aWV3cG9ydCcpLndpZHRoKCkgKiAoc2xpZGVOb3cgLSAyKTtcclxuICAgICAgICBqUXVlcnkoJyNzbGlkZXdyYXBwZXInKS5jc3Moe1xyXG4gICAgICAgICAgICAndHJhbnNmb3JtJzogJ3RyYW5zbGF0ZSgnICsgdHJhbnNsYXRlV2lkdGggKyAncHgsIDApJyxcclxuICAgICAgICAgICAgJy13ZWJraXQtdHJhbnNmb3JtJzogJ3RyYW5zbGF0ZSgnICsgdHJhbnNsYXRlV2lkdGggKyAncHgsIDApJyxcclxuICAgICAgICAgICAgJy1tcy10cmFuc2Zvcm0nOiAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVXaWR0aCArICdweCwgMCknLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNsaWRlTm93LS07XHJcbiAgICB9XHJcbn0iXX0=
